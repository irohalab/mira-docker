##
# to use this docker-compose override, create the following folders
# download-manager: put config.yml and ormconfig.json to this folder for mira-download-manager
# video-manager: put config.yml and ormconfig.json to this folder for mira-video-manager
##
version: '3.9'
services:
  download-manager:
    image: 'ghcr.io/irohalab/mira-download-manager:${DOWNLOAD_MANAGER_TAG}'
    profiles: ['download-manager', 'prod']
    container_name: 'mira-download-manager_core'
    environment:
      APPCONFIG: /etc/mira/config.yml
      ORMCONFIG: /etc/mira/ormconfig.json
      SERVER_BASE_URL: ${DM_SERVER_BASE_URL:-http://download-manager-server:8081}
    volumes:
      - ${DM_CONFIG_DIR:-./download-manager}/config.yml:/etc/mira/config.yml:ro
      - ${DM_CONFIG_DIR:-./download-manager}/ormconfig.json:/etc/mira/ormconfig.json:ro
      - ${DOWNLOAD_DATA:-/data/albireo}:/data/download
    restart: unless-stopped
    command: 'node dist/main.js'
    depends_on:
      - postgres
      - qbittorrent
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

  download-manager-server:
    image: 'ghcr.io/irohalab/mira-download-manager:${DOWNLOAD_MANAGER_TAG}'
    container_name: 'mira-download-manager_server'
    profiles: ['download-manager', 'prod']
    environment:
      APPCONFIG: /etc/mira/config.yml
      ORMCONFIG: /etc/mira/ormconfig.json
      SERVER_BASE_URL: ${DM_SERVER_BASE_URL:-http://download-manager-server:8081}
    volumes:
      - ${DM_CONFIG_DIR:-./download-manager}/config.yml:/etc/mira/config.yml:ro
      - ${DM_CONFIG_DIR:-./download-manager}/ormconfig.json:/etc/mira/ormconfig.json:ro
      - ${DOWNLOAD_DATA:-/data/albireo}:/data/download
    restart: unless-stopped
    command: 'node dist/WebServer.js'
    depends_on:
      - postgres
      - qbittorrent
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

  video-manager-job-scheduler:
    image: 'ghcr.io/irohalab/mira-video-manager:${VIDEO_MANAGER_TAG}'
    container_name: 'mira-video-manager_job-scheduler'
    profiles: ['video-manager', 'prod']
    environment:
      APPCONFIG: /etc/mira/config.yml
      ORMCONFIG: /etc/mira/ormconfig.json
      START_AS: JOB_SCHEDULER
      SERVER_BASE_URL: ${VM_SERVER_BASE_URL:-http://video-manager-job-executor-file-server:8082}
    volumes:
      - ${VM_CONFIG_DIR:-./video-manager}/config.yml:/etc/mira/config.yml:ro
      - ${VM_CONFIG_DIR:-./video-manager}/ormconfig.json:/etc/mira/ormconfig.json:ro
      - ${VM_PROFILE_DIR:-/var/mira/vm}:/temp
      - ${VM_LOG_DIR-/var/log/mira}:/var/log
    restart: unless-stopped
    command: 'node dist/main.js'
    depends_on:
      - postgres
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

  video-manager-job-executor:
    image: 'ghcr.io/irohalab/mira-video-manager:${VIDEO_MANAGER_TAG}'
    container_name: 'mira-video-manager_job-executor'
    profiles: ['video-manager', 'prod']
    environment:
      APPCONFIG: /etc/mira/config.yml
      ORMCONFIG: /etc/mira/ormconfig.json
      START_AS: JOB_EXECUTOR
      SERVER_BASE_URL: ${VM_SERVER_BASE_URL:-http://video-manager-job-executor-file-server:8082}
    volumes:
      - ${VM_CONFIG_DIR:-./video-manager}/config.yml:/etc/mira/config.yml:ro
      - ${VM_CONFIG_DIR:-./video-manager}/ormconfig.json:/etc/mira/ormconfig.json:ro
      - ${VM_PROFILE_DIR:-/var/mira/vm}:/temp
      - ${VM_LOG_DIR-/var/log/mira}:/var/log
      - ${VM_FONT_DIR-./video-manager/font}:/extfont
    restart: unless-stopped
    command: 'node dist/main.js'
    depends_on:
      - postgres
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5
  video-manager-job-executor-meta:
    image: 'ghcr.io/irohalab/mira-video-manager:${VIDEO_MANAGER_TAG}'
    container_name: 'mira-video-manager_job-executor-meta'
    profiles: [ 'video-manager', 'prod' ]
    environment:
      APPCONFIG: /etc/mira/config.yml
      ORMCONFIG: /etc/mira/ormconfig.json
      START_AS: JOB_EXECUTOR
      EXEC_MODE: META_MODE
      SERVER_BASE_URL: ${VM_SERVER_BASE_URL:-http://video-manager-job-executor-file-server:8082}
    volumes:
      - ${VM_CONFIG_DIR:-./video-manager}/config.yml:/etc/mira/config.yml:ro
      - ${VM_CONFIG_DIR:-./video-manager}/ormconfig.json:/etc/mira/ormconfig.json:ro
      - ${VM_PROFILE_DIR:-/var/mira/vm}:/temp
      - ${VM_LOG_DIR-/var/log/mira}:/var/log
      - ${VM_FONT_DIR-./video-manager/font}:/extfont
    restart: unless-stopped
    command: 'node dist/main.js'
    depends_on:
      - postgres
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

  video-manager-api:
    image: 'ghcr.io/irohalab/mira-video-manager:${VIDEO_MANAGER_TAG}'
    container_name: 'mira-video-manager_api'
    profiles: ['video-manager', 'prod']
    environment:
      APPCONFIG: /etc/mira/config.yml
      ORMCONFIG: /etc/mira/ormconfig.json
      START_AS: API_SERVER
      SERVER_BASE_URL: ${VM_SERVER_BASE_URL:-http://video-manager-job-executor-file-server:8082}
    volumes:
      - ${VM_CONFIG_DIR:-./video-manager}/config.yml:/etc/mira/config.yml:ro
      - ${VM_CONFIG_DIR:-./video-manager}/ormconfig.json:/etc/mira/ormconfig.json:ro
      - ${VM_PROFILE_DIR:-/var/mira/vm}:/temp
      - ${VM_LOG_DIR-/var/log/mira}:/var/log
      - ${VM_FONT_DIR-./video-manager/font}:/extfont
    restart: unless-stopped
    command: 'node dist/WebServer.js'
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

  video-manager-job-executor-file-server:
    image: 'ghcr.io/irohalab/mira-video-manager:${VIDEO_MANAGER_TAG}'
    container_name: 'mira-video-manager_job-executor-file-server'
    profiles: ['video-manager', 'prod']
    environment:
      APPCONFIG: /etc/mira/config.yml
      ORMCONFIG: /etc/mira/ormconfig.json
      START_AS: JOB_EXECUTOR
      SERVER_BASE_URL: ${VM_SERVER_BASE_URL:-http://video-manager-job-executor-file-server:8082}
    volumes:
      - ${VM_CONFIG_DIR:-./video-manager}/config.yml:/etc/mira/config.yml:ro
      - ${VM_CONFIG_DIR:-./video-manager}/ormconfig.json:/etc/mira/ormconfig.json:ro
      - ${VM_PROFILE_DIR:-/var/mira/vm}:/temp
      - ${VM_LOG_DIR-/var/log/mira}:/var/log
    restart: unless-stopped
    command: 'node dist/WebServer.js'
    depends_on:
      - postgres
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

  albireo-server:
    image: 'ghcr.io/irohalab/albireo:${ALBIREO_TAG}'
    container_name: 'albireo-server'
    profiles: ['albireo', 'prod']
    environment:
      PYTHONUNBUFFERED: 1
    # you can comment out this if your reverse-proxy is using the same docker network
    ports:
      - ${ALBIREO_PORT:-30001}:5000
    volumes:
      - ${ALBIREO_CONFIG_DIR:-./albireo}/config.yml:/usr/app/config/config.yml:ro
      - ${ALBIREO_CONFIG_DIR:-./albireo}/sentry.yml:/usr/app/config/sentry.yml:ro
      - ${ALBIREO_CONFIG_DIR:-./albireo}/alembic.ini:/usr/app/alembic.ini:ro
      - ${DOWNLOAD_DATA:-/data/albireo}:/data/albireo:rw
    command: 'twistd -n --pidfile= web --port 5000 --wsgi appd.app'
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

  albireo-scheduler:
    image: 'ghcr.io/irohalab/albireo:${ALBIREO_TAG}'
    container_name: 'albireo-scheduler'
    profiles: ['albireo', 'prod']
    environment:
      PYTHONUNBUFFERED: 1
      EXECJS_RUNTIME: "Node"
    volumes:
      - ${ALBIREO_CONFIG_DIR:-./albireo}/config.yml:/usr/app/config/config.yml:ro
      - ${ALBIREO_CONFIG_DIR:-./albireo}/sentry.yml:/usr/app/config/sentry.yml:ro
      - ${ALBIREO_CONFIG_DIR:-./albireo}/alembic.ini:/usr/app/alembic.ini:ro
      - ${DOWNLOAD_DATA:-/data/albireo}:/data/albireo:rw
    command: '/usr/bin/python Scheduler.py'
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - mira
    logging:
      driver: json-file
      options:
        max_size: 10m
        max_file: 5

networks:
  mira:
    external: true
    name: mira